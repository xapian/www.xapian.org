#!/usr/bin/perl
use strict;
use warnings;
use Template;

# some useful options (see below for full list)
my $config = {
#    INCLUDE_PATH => '/search/path',  # or list ref
#	INTERPOLATE  => 1,               # expand "$var" in plain text
	POST_CHOMP   => 1,               # cleanup whitespace
#	PRE_PROCESS  => 'header',        # prefix each template
	EVAL_PERL    => 1,               # evaluate Perl code blocks
};

my $template = Template->new($config);

1;
# define template variables for replacement
my $vars = {
    releases => [
	{
	    branch => '1.4',
	    status => 'stable',
	    version => '1.4.18',
	    release_date => '2021-01-14',
	    extension => 'tar.xz',
	    #	    announce => 'https://lists.xapian.org/pipermail/xapian-discuss/2020-August/009814.html'
	},
	{
	    branch => '1.2',
	    status => 'old stable',
	    version => '1.2.25',
	    release_date => '2017-09-26',
	    perl_minor => '.4',
	    extension => 'tar.xz', # Search::Xapian hardcoded as tar.gz currently
	    announce => 'https://lists.xapian.org/pipermail/xapian-discuss/2017-September/009553.html'
	},
#	{
#	    branch => '1.0',
#	    status => '1.0',
#	    version => '1.0.23',
#	    release_date => '2011-01-14',
#	    perl_minor => '.0',
#	    announce => 'http://article.gmane.org/gmane.comp.search.xapian.general/8659'
#	},
#	{
#	    branch => '1.3',
#	    status => 'development',
#	    version => '1.3.7',
#	    release_date => '2016-06-01',
#	    extension => 'tar.xz',
#	    announce => 'http://article.gmane.org/gmane.comp.search.xapian.general/10017'
#	}
    ],
};

for my $rel (@{$vars->{releases}}) {
    next if exists $rel->{announce};
    my $version = $rel->{version};
    if ($version =~ /^\d+\.\d*[13579]\./) {
	# dev snapshot
	$rel->{announce} = 'https://oligarchy.co.uk/xapian/' . $version;
    } else {
	$rel->{announce} = '/download';
    }
}

for my $r (@{$vars->{releases}}) {
    my $prefix = $r->{status};
    $prefix =~ s/\s*\bstable$//;
    $prefix =~ s/\bdevelopment\b/dev/;
    if ($prefix ne '') {
	$prefix =~ s/ /_/g;
	$prefix .= '_';
    }
    for (qw(version extension)) {
	print "$prefix$_='$r->{$_}'\n";
    }
}

my @pages = (
    [ "index" => "home" ],
    [ "features" => "features" ],
    [ "history" => "history" ],
    [ "lists" => "mailing lists" ],
    [ "docs/" => "docs" ],
    [ "users" => "current users" ],
    [ "sponsors" => "sponsors" ],
    [ "support" => "commercial support" ],
    [ "download" => "download" ],
    [ "bleeding" => "bleeding edge" ],
    [ "bugs" => "bugs" ],
    [ "contact" => "contact us" ],
    [ "search" => "search this website" ]
);

my $styleandmeta;
{
    open STYLEANDMETA, '<', 'styleandmeta.txt' or die $!;
    local $/ = undef;
    $styleandmeta = <STYLEANDMETA>;
    close STYLEANDMETA;
}

# specify input filename, or file handle, text reference, etc.
for my $in (<*.tt>) {
    ((my $page = $in) =~ s/\.tt$//) or next;
    my $out = "$page.html";
    my $canonical = $page eq 'index' ? '' : $page;
my $cssnav = <<__END__;   
<div id="Menu">
__END__
    for (@pages) {
	my ($link, $desc) = @{$_};
	if ($link eq $page) {
	    $cssnav .= "<span id=\"current\">$desc</span>";
	} else {
	    $link eq "index" and $link = '.';
	    $cssnav .= '<a href="'.$link.'">'.$desc.'</a>';
	}
	$cssnav .= "<br>\n";
    }
    if ($page ne "search") {
	$cssnav .= "<form method=\"GET\" action=\"search\"><div><input type=\"search\" name=\"P\" size=\"14\"></div></form>\n";
    }
    $cssnav .= "</div>\n";
    $$vars{cssnav} = $cssnav;
    $$vars{styleandmeta} = $styleandmeta . "<link rel=\"canonical\" href=\"https://xapian.org/$canonical\">\n";
    $template->process($in, $vars, $out) || die $template->error();
}
